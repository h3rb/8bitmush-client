<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.active_window=noone;

global.width=display_get_gui_width();
global.height=display_get_gui_height();

init_surfaces();

view_visible[0]=true;
view_enabled=true;
view_xport[0]=0;
view_yport[0]=0;
view_wport[0]=room_width;
view_hport[0]=room_height;
view_hborder[0]=room_width/4;
view_vborder[0]=room_height/4;
view_angle[0]=0;
view_surface_id[0]=surface_by_name("screen");

surf=surface_by_name("screen");
surf2=surface_by_name("screen2");
surf3=surface_by_name("screen3");
surf4=surface_by_name("screen4");

key_press=0;
side=-1;
mx_offset=0;
my_offset=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_persistent = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// window resizing?
if(window_get_width() != view_wview || window_get_height() != view_hview) {
  view_wview = window_get_width();
  view_hview = window_get_height();
  view_wport = view_wview;
  view_hport = view_hview;
 
  room_persistent = true;
  room_speed=100;
  room_goto(room);
}else{
    room_speed=30;
}
if (mouse_x&gt;view_wview[0]-50){ //right side
    window_set_cursor(cr_size_we);
    if (mouse_check_button_pressed(mb_left)){
        key_press=1;
        side=2;
        mx_offset=window_mouse_get_x()-view_wview[0];
        my_offset=window_mouse_get_y()-view_hview[0];
    }else if (mouse_check_button_released(mb_left)){
        key_press=0;
        side=-1;
        alarm[0] = 1;
    }
}else if (mouse_y&gt;view_hview[0]-50){ //bottom
    window_set_cursor(cr_size_ns);
    if (mouse_check_button_pressed(mb_left)){
        key_press=1;
        side=3;
        mx_offset=window_mouse_get_x()-view_wview[0];
        my_offset=window_mouse_get_y()-view_hview[0];
    }else if (mouse_check_button_released(mb_left)){
        key_press=0;
        side=-1;
        alarm[0] = 1;
    }
}else if (mouse_y&lt;50){ //top
    window_set_cursor(cr_size_ns);
    if (mouse_check_button_pressed(mb_left)){
        key_press=1;
        side=1;
        mx_offset=window_mouse_get_x();
        my_offset=window_mouse_get_y();
    }else if (mouse_check_button_released(mb_left)){
        key_press=0;
        side=-1;
        alarm[0] = 1;
    }
}else if (mouse_x&lt;50){ //left
    window_set_cursor(cr_size_we);
    if (mouse_check_button_pressed(mb_left)){
        key_press=1;
        side=0;
        mx_offset=window_mouse_get_x();
        my_offset=window_mouse_get_y();
    }else if (mouse_check_button_released(mb_left)){
        key_press=0;
        side=-1;
        alarm[0] = 1;
    }
}else{
    window_set_cursor(cr_arrow);
}
if (key_press=1){
        if (side=2){window_set_size(window_mouse_get_x()-mx_offset,window_get_height());}
        else if (side=3){window_set_size(window_get_width(),window_mouse_get_y()-my_offset);}
        else if (side=1){ //top
            window_set_rectangle(window_get_x(),display_mouse_get_y()-my_offset-10,window_get_width(),window_get_height()-window_mouse_get_y());
        }else if (side=0){ //left
            window_set_rectangle(display_mouse_get_x()-mx_offset-10,window_get_y(),window_get_width()-window_mouse_get_x(),window_get_height());
        }
}
room_caption=string(fps);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
global.width=display_get_gui_width();
global.height=display_get_gui_height();

var gw=global.width;
var gh=global.height;

surf=surface_by_name("screen");   // View (objects)
surf2=surface_by_name("screen2"); // Composite


surface_clear(surf2,c_black,1);
draw_set_blend_mode(bm_normal);
surface_set_target(surf2);
draw_surface_stretched(surf,  0, 0, gw, gh );
surface_reset_target();

draw_surface_stretched(surf2, 0, 0, gw, gh );


view_surface_id[0]=surface_by_name("screen");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
