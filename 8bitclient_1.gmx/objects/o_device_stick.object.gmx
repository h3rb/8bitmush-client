<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_controller</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xofs=79;
yofs=104;

stick_active = -1; //Activates the circle pad thingy. -1 = NO device input, (0..4) = device input

stick_radius=14;
radius=40;

change_timer = 0; //To make sure you can't spam click

direct=0;
n_way = 2; //1 = 4 Way Direction, 2 = 8 Way Direction. SIMPLES...

a =0;// view_xview[0]; //Left side of the screen
b =0;// view_yview[0]; //Top side of the screen
c =window_get_width();// view_xview[0] + view_wview[0]; //Right side of the screen
d =window_get_height();// view_yview[0] + view_hview[0]; //Bottom side of the screen

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dp;

depth = -room_height;
change_timer = max(0,change_timer - 1);

var pad_x,pad_y,radius;
pad_x = x+xofs;//a + (view_wview[0] div 2); //Modify x and y to where ever on the screen.
pad_y = y+yofs;//b + (view_hview[0] div 2);

//---Circle Pad input---//
for(dp = 0;dp &lt;= 4;dp = dp + 1)
{
    if (Device_Input_Script(2,dp,pad_x,pad_y,radius) &amp;&amp; !(stick_active &gt;= 0 &amp;&amp; stick_active &lt;= 4) &amp;&amp; change_timer &lt; 1) //Activates the Stick
    {
        stick_active = dp;
        change_timer = 5;
        break;
    }
}

if (stick_active &gt;= 0 &amp;&amp; stick_active &lt;= 4)
{
    if (Device_Input_Script(7,stick_active,0,0,0)) //Deactivates the Stick
        stick_active = -1;
}
//---Circle Pad Input---//
    
//See? Not so hard is it folks? Well I hope it wasn't difficult. I even added the Angle Scripts and Device Input and possability of buttons

//Just for testing measures
if (keyboard_check_pressed(vk_enter))
{
    if (n_way == 1)
        n_way = 2;
    else
        n_way = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(s_controller,0,x,y,1,1,0,c_white,1);

var pad_x,pad_y;
pad_x = x+xofs;//a + (view_wview[0] div 2); //Modify x and y to where ever on the screen.
pad_y = y+yofs;//b + (view_hview[0] div 2);

draw_sprite(Circle_Pad_Spr,0,pad_x,pad_y);
var stick_x,stick_y;
stick_x = pad_x; //This is the stick co-ordinates from the center of the dot
stick_y = pad_y;

if (stick_active &gt;= 0 &amp;&amp; stick_active &lt;= 4) //If the stick is active, it allows the blue dot (stick) to move around the red circle (pad)
{
    stick_x = Device_Input_Script(4,stick_active,pad_x,pad_y,pad_radius - stick_radius);
    stick_y = Device_Input_Script(5,stick_active,pad_x,pad_y,pad_radius - stick_radius);
}

draw_sprite(Circle_Stick_Spr,0,stick_x,stick_y);

//All the stuff below demonstrates how you can use the stick_x and stick_y to determine directions
if (stick_active &gt;= 0 &amp;&amp; stick_active &lt;= 4)
{
    var angle,direct,str;
    angle = Angle_Script(1,pad_x,pad_y,stick_x,stick_y); //This retrieves the degree angle fro mthe pad to the mouse &lt;-A MUST
    direct = 1 + (5 * (n_way == 2)); //Defaulting to DOWN
    str = "DOWN";
    if (n_way == 1) //This is if you need 4 Way movement
    {
//     draw_text(a,b,"4 Way Direction");
     direct = Angle_Script(2,angle,0,0,0); //This will give you the N Way Movement. THIS IS WHAT DECIDES THE MOVEMENT DIRECTION
        
     switch ( direct ) {
      case 1: draw_sprite_ext(s_direction_indicator,0,x+72,y+131,1,1,180,c_white,1); break; // str = "DOWN";
      case 2: draw_sprite_ext(s_direction_indicator,0,x+38,y+97, 1,1, 90,c_white,1); break; // str = "LEFT";
      case 3: draw_sprite_ext(s_direction_indicator,0,x+72,y+68,1,1,0,c_white,1); break; // str = "UP";
      case 4: draw_sprite_ext(s_direction_indicator,0,x+72,y+68,1,1,0,c_white,1); break; // str = "RIGHT";
     }
    }
    if (n_way == 2) //This is if you need 8 Way movement
    {
        draw_text(a,b,"8 Way Direction");    
        direct = Angle_Script(5,angle,0,0,0);  //This will give you the N Way Movement. THIS IS WHAT DECIDES THE MOVEMENT DIRECTION
        
        if (direct == 1)
            str = "UP-RIGHT";
        if (direct == 2)
            str = "UP";
        if (direct == 3)
            str = "UP-LEFT";
        if (direct == 4)
            str = "LEFT";
        if (direct == 5)
            str = "DOWN-LEFT";
        if (direct == 6)
            str = "DOWN";
        if (direct == 7)
            str = "DOWN-RIGHT";
        if (direct == 8)
            str = "RIGHT";
    }
//    draw_text(a,b + 16,"Direction from Pad to Mouse: " + string(angle));
//    draw_text(a,b + 32,"Direct = " + string(direct) + " which is " + str);
}

if (n_way == 1)
    draw_text(a,d - 16,"Press Enter to switch to 8 Way stick");
else
    draw_text(a,d - 16,"Press Enter to switch to 4 Way stick");

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>226,226</point>
  </PhysicsShapePoints>
</object>
